stages:
  - build:frontend
  - build:docker
  - deploy

variables:
  K8_NAMESPACE: covid-19-vis

.rules-backend: &rules-backend
  rules:     
  # do not run pipelines for merge requests (gets rid of "detatched pipelines")
  - if: $CI_MERGE_REQUEST_ID
    when: never
  # run if files changed; no branch restrictions
  - changes:
      - Backend/**
      - Backend/**/*
      - k8/Backend/**
      - k8/Backend/**/*
    if: $CI_COMMIT_BRANCH == "master"
    when: always
  # default is on_success, so explicitly set job not to run if none of the above rules matched
  - when: never

.rules-frontend: &rules-frontend
  rules:     
  # do not run pipelines for merge requests (gets rid of "detatched pipelines")
  - if: $CI_MERGE_REQUEST_ID
    when: never
  # run if files changed; no branch restrictions
  - changes:
      - Frontend/**
      - Frontend/**/*
      - k8/Frontend/**
      - k8/Frontend/**/*
    if: $CI_COMMIT_BRANCH == "master"
    when: always
  # default is on_success, so explicitly set job not to run if none of the above rules matched
  - when: never

.rules-crawler: &rules-crawler
  rules:     
  # do not run pipelines for merge requests (gets rid of "detatched pipelines")
  - if: $CI_MERGE_REQUEST_ID
    when: never
  # run if files changed; no branch restrictions
  - changes:
      - Crawler/**
      - Crawler/**/*
      - k8/Crawler/**
      - k8/Crawler/**/*
    if: $CI_COMMIT_BRANCH == "master"
    when: always
  # default is on_success, so explicitly set job not to run if none of the above rules matched
  - when: never


.rules-tileserver: &rules-tileserver
  rules:     
  # do not run pipelines for merge requests (gets rid of "detatched pipelines")
  - if: $CI_MERGE_REQUEST_ID
    when: never
  # run if files changed; no branch restrictions
  - changes:
      - Tiles/**
      - Tiles/**/*
      - k8/Tiles/**
      - k8/Tiles/**/*
    if: $CI_COMMIT_BRANCH == "master"
    when: always
  # default is on_success, so explicitly set job not to run if none of the above rules matched
  - when: never

###########################################
# BUILD
###########################################

build-frontend:
  stage: build:frontend
  image: node:latest
  script:
    - cd Frontend/gis
    - npm install --unsafe-perm
    - npm run-script build
  artifacts:
    expire_in: 1 day
    paths:
      - ./Frontend/gis/dist
  cache:
    key: 
      files:
        - ./Frontend/gis/package.json
        - ./Frontend/gis/package-lock.json
    paths:
      - ./Frontend/gis/node_modules
  tags:
    - docker

###########################################
# DOCKERIZE
###########################################

.dockerize-template: &dockerize-template
  stage: build:docker
  image: docker:latest
  services: 
    - docker:dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - cd ${FOLDER}
    - docker build -t "$IMG" .
    - docker push "$IMG"
  tags:
    - docker-build


dockerize-backend:
  variables:
    IMG: $CI_REGISTRY_IMAGE/backend:${CI_COMMIT_SHORT_SHA}
    FOLDER: Backend
  <<: *dockerize-template
  <<: *rules-backend
  dependencies: []

dockerize-frontend:
  variables:
    IMG: $CI_REGISTRY_IMAGE/frontend:${CI_COMMIT_SHORT_SHA}
    FOLDER: Frontend
  <<: *dockerize-template
  <<: *rules-frontend
  needs:
    - build-frontend
  dependencies:
    - build-frontend

dockerize-crawler:
  variables:
    IMG: $CI_REGISTRY_IMAGE/crawler:${CI_COMMIT_SHORT_SHA}
    FOLDER: Crawler
  <<: *dockerize-template
  <<: *rules-crawler
  dependencies: []

dockerize-tileserver:
  variables:
    IMG: $CI_REGISTRY_IMAGE/tileserver:${CI_COMMIT_SHORT_SHA}
    FOLDER: Tiles
  <<: *dockerize-template
  <<: *rules-tileserver
  dependencies: []



###########################################
# DEPLOY
###########################################

.deploy-script: &deploy-template
  stage: deploy
  script:
    - helm upgrade --namespace=${K8_NAMESPACE} --dry-run --debug --install --set sha="${CI_COMMIT_SHORT_SHA}" ${HELM_CHART} ./k8/${FOLDER}
    - helm upgrade --namespace=${K8_NAMESPACE} --install --set sha="${CI_COMMIT_SHORT_SHA}" ${HELM_CHART} ./k8/${FOLDER}
  tags:
    - k8-admin

    
deploy-backend:
  variables:
    HELM_CHART: covid-19-vis-backend
    URL: api.covid19vis.lingvis.io
    FOLDER: Backend
  <<: *deploy-template
  <<: *rules-backend
  needs:
    - dockerize-backend
  dependencies: 
    - dockerize-backend

deploy-frontend:
  variables:
    HELM_CHART: covid-19-vis-frontend
    URL: covid19vis.lingvis.io
    FOLDER: Frontend
  <<: *deploy-template
  <<: *rules-frontend
  needs:
    - dockerize-frontend
  dependencies:
    - dockerize-frontend

deploy-crawler:
  variables:
    HELM_CHART: covid-19-vis-crawler
    FOLDER: Crawler
  <<: *deploy-template
  <<: *rules-crawler
  needs:
    - dockerize-crawler
  dependencies:
    - dockerize-crawler

deploy-tileserver:
  variables:
    HELM_CHART: covid-19-vis-tileserver
    URL: tiles.covid19vis.lingvis.io
    FOLDER: Tiles
  <<: *deploy-template
  <<: *rules-tileserver
  needs:
    - dockerize-tileserver
  dependencies:
    - dockerize-tileserver